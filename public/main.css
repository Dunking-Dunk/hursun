/*!******************************************************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js!./node_modules/postcss-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./styles/index.scss ***!
  \******************************************************************************************************************************************************/
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
}

/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
  display: block;
}

body {
  line-height: 1;
}

ol, ul {
  list-style: none;
}

blockquote, q {
  quotes: none;
}

blockquote:before, blockquote:after,
q:before, q:after {
  content: "";
  content: none;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

.projects__wrapper, .projects, .project, .home, .header, .content, body, html {
  height: 100%;
  left: 0;
  object-fit: cover;
  position: absolute;
  top: 0;
  width: 100%;
}

.dg.ac {
  z-index: 99999 !important;
}

@font-face {
  font-family: "Montserrat";
  src: url(72b398af40ae6768ab99.woff2) format("woff2"), url(3155f256200b7d559607.woff) format("woff");
  font-weight: bold;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Montserrat";
  src: url(827bdec59c41f1f388f4.woff2) format("woff2"), url(3db1a9575b6c29f62162.woff) format("woff");
  font-weight: 600;
  font-style: italic;
  font-display: swap;
}
@font-face {
  font-family: "Montserrat";
  src: url(33eb0bfb55ec28115f71.woff2) format("woff2"), url(2451e96bc4c62e5ad1d0.woff) format("woff");
  font-weight: 500;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Montserrat";
  src: url(293820371ca99ec04459.woff2) format("woff2"), url(4a3d63613a362f90a9e6.woff) format("woff");
  font-weight: normal;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Manolo Mono";
  src: url(954e6cc6aad67763a399.woff2) format("woff2"), url(d7295187ecc185902cee.woff) format("woff");
  font-weight: normal;
  font-style: normal;
  font-display: swap;
}
* {
  box-sizing: border-box;
  user-select: none;
  scroll-behavior: smooth;
}

html {
  font-size: 0.5208333333vw;
  font-family: "Montserrat";
  overflow: hidden;
}
@media (max-width: 767px) {
  html {
    font-size: 1.3333333333vw;
  }
}

body {
  background-color: #000000;
  color: #f6f6f6;
  overflow: hidden;
}

body::-webkit-scrollbar {
  width: 0.5rem;
}

body::-webkit-scrollbar-thumb {
  background-color: #D2001A;
  border-radius: 10px;
}

a {
  color: inherit;
  text-decoration: none;
  outline: none;
}

button {
  color: inherit;
  background: none;
  cursor: pointer;
  outline: none;
  border: none;
}

.content {
  overflow: hidden;
  z-index: 1;
}

canvas {
  position: absolute;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 0;
  pointer-events: none;
}

[data-animation=textReveal] span,
[data-animation=textOpacity] span,
[data-animation=label] span {
  display: inline-block;
  overflow: hidden;
  vertical-align: top;
}

.header__sidebar__social .header__sidebar__social__link, .header__sidebar__link {
  display: inline-block;
  overflow: hidden;
  position: relative;
  vertical-align: top;
}

.header__sidebar__social .header__sidebar__social__link:after, .header__sidebar__link:after {
  background: currentColor;
  bottom: 0;
  content: "";
  height: 1px;
  left: 0;
  position: absolute;
  transition: transform 0.7s cubic-bezier(0.19, 1, 0.22, 1);
  width: 100%;
}

.header__sidebar__social .header__sidebar__social__link:hover:after, .header__sidebar__link:hover:after {
  transform: scaleX(1);
  transform-origin: left center;
}

.header__sidebar__social .header__sidebar__social__link:after, .header__sidebar__link:after {
  transform: scaleX(0);
  transform-origin: right center;
}

.header__sidebar__social .header__sidebar__social__link, .header__sidebar__link {
  display: inline-block;
}
.preloader {
  position: fixed;
  width: 100%;
  height: 100%;
  background-color: #000000;
  color: #f6f6f6;
  z-index: 100;
}

.preloader__wrapper {
  width: 100%;
  height: 100%;
  padding: 5rem;
  position: relative;
}

.navigation {
  position: absolute;
  top: 0;
  left: 0;
  height: 100vh;
  width: 100vw;
  z-index: 10;
  pointer-events: none;
}
@media (max-width: 767px) {
  .navigation svg {
    height: 120vh;
  }
}
.navigation .navigation__path {
  width: 100%;
  height: 100%;
  fill: #212121;
}

.header {
  width: 100%;
  height: 100%;
  color: #f6f6f6;
  padding: 0px 5rem;
  z-index: 2;
  pointer-events: none;
}

.header__wrapper {
  width: 100%;
  height: 100%;
}

.header__head {
  width: 100%;
  height: 8rem;
  display: flex;
  align-items: center;
  justify-content: space-between;
}

.header__logo {
  width: 5rem;
}

.header__center {
  font-size: 1.5rem;
  font-weight: 400;
}

.header__btn {
  position: relative;
  width: 3rem;
  height: 3rem;
  border-radius: 100%;
  background-color: #f6f6f6;
  cursor: pointer;
  gap: 0.75rem;
  pointer-events: all;
  z-index: 2;
}

.header__btn__line {
  position: absolute;
  width: 75%;
  height: 0.3rem;
  background-color: #212121;
  border-radius: 0.5rem;
  transition: 0.5s ease;
  left: 50%;
  transform: translate(-50%, 0%);
}
.header__btn__line:nth-child(1) {
  top: 30%;
}
.header__btn__line:nth-child(2) {
  bottom: 30%;
}

.header__btn.active .header__btn__line {
  top: 50%;
}
.header__btn.active .header__btn__line:nth-child(1) {
  transform: translate(-50%, 0) rotate(45deg);
}
.header__btn.active .header__btn__line:nth-child(2) {
  transform: translate(-50%, 0) rotate(-45deg);
}

.header__sidebar {
  height: 100%;
  width: 100%;
  position: absolute;
  top: 0%;
  right: 0%;
  opacity: 0;
  background-color: transparent;
  transition: 0.3s cubic-bezier(0.445, 0.05, 0.55, 0.95);
  pointer-events: none;
  display: grid;
  grid-template-columns: 1fr 2fr 3fr;
  grid-template-rows: 1fr 2fr 1fr;
  z-index: 1;
}
@media (max-width: 767px) {
  .header__sidebar {
    grid-template-columns: 1fr 3fr;
  }
}

.header__transition {
  position: absolute;
  bottom: 0;
  left: 0;
  height: 100%;
  width: 100%;
  fill: #212121;
}

.header__sidebar.active {
  opacity: 1;
  pointer-events: all;
}

.header__sidebar__links {
  grid-row-start: 2;
  grid-column-start: 2;
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
  justify-content: center;
  list-style: none;
}

.header__sidebar__link__container {
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
}

.header__sidebar__link {
  font-size: 6rem;
  font-weight: 600;
  text-transform: uppercase;
}

.header__sidebar__social {
  grid-row-start: 3;
  grid-column-start: 2;
  display: flex;
  flex-direction: row;
  justify-content: space-evenly;
  align-items: center;
}
.header__sidebar__social .header__sidebar__social__link {
  font-size: 2rem;
}

.header__sidebar__logo {
  grid-row-start: 2;
  grid-column-start: 3;
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 1rem;
}
.header__sidebar__logo .header__sidebar__logo___img {
  height: 80%;
  object-fit: contain;
}
@media (max-width: 767px) {
  .header__sidebar__logo {
    display: none;
  }
}

.header__sidebar__header {
  font-size: 1.5rem;
  font-weight: 600;
  grid-row-start: 2;
  grid-column-start: 1;
  display: flex;
  text-transform: uppercase;
  justify-content: center;
}

.header__sidebar__social__header {
  font-size: 1.5rem;
  font-weight: 600;
  grid-row-start: 3;
  grid-column-start: 1;
  display: flex;
  text-transform: uppercase;
  justify-content: center;
}

.footer {
  position: relative;
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: space-evenly;
  padding: 4rem;
}
@media (max-width: 767px) {
  .footer {
    flex-direction: column;
    align-items: flex-start;
    justify-content: space-between;
    gap: 2rem;
    padding: 1rem 2rem;
    margin-bottom: 5rem;
  }
}

.footer__para {
  font-size: 2rem;
  font-weight: 500;
}

.footer__links {
  align-self: center;
  width: 70rem;
  height: 5rem;
  border-radius: 1rem;
  display: flex;
  flex-direction: row;
  justify-content: space-evenly;
}
@media (max-width: 767px) {
  .footer__links {
    width: 60rem;
  }
}

.footer__link {
  width: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  height: 100%;
  text-decoration: none;
  color: var(--primary-color);
  font-size: 1.5rem;
  text-transform: capitalize;
  transition: 0.3s ease;
}
.footer__link:hover {
  transform: translateY(-10px);
}

.home__wrapper {
  width: 100%;
  position: absolute;
  left: 0;
  top: 0;
  will-change: transform;
}

.home__hero {
  position: relative;
  width: 100%;
  height: 100dvh;
  display: flex;
  align-items: center;
  justify-content: flex-start;
  padding: 0 10rem;
}
@media (max-width: 767px) {
  .home__hero {
    padding: 0 1rem;
  }
}

.home__hero__title {
  font-family: "Manolo Mono";
  font-size: 10rem;
  margin-left: 4rem;
  margin-top: 10rem;
}
@media (max-width: 767px) {
  .home__hero__title {
    font-size: 8rem;
  }
}

.hero__arrow {
  position: absolute;
  top: 85%;
  left: 50%;
  transform: translate(-50%, 0%);
}

.hero__message__container {
  position: absolute;
  bottom: 20%;
  left: 10%;
  display: flex;
  flex-direction: row;
  gap: 2rem;
}

.hero__message__circle {
  width: 2rem;
  height: 2rem;
  border-radius: 50%;
  background-color: #f6f6f6;
}

.hero__message {
  font-weight: 500;
  font-size: 2.4rem;
}

.home__arrow {
  width: 10rem;
  height: 10rem;
  display: flex;
  align-items: center;
  justify-content: center;
  will-change: transform;
  transform-style: preserve-3d;
}

.home__arrow__outer {
  position: absolute;
  width: 12rem;
  height: 12rem;
  border-radius: 50%;
  border: 0.1rem solid #f6f6f6;
}

.home__arrow__inner {
  position: absolute;
  width: 11rem;
  height: 11rem;
  border-radius: 50%;
  border: 0.1rem solid #f6f6f6;
}

.home__arrow__down {
  position: absolute;
  width: 5rem;
  height: 5rem;
}

.home__header {
  position: relative;
  top: 3%;
  left: 0;
  width: 100%;
  padding: 1rem;
  border-bottom: 0.2rem solid #f6f6f6;
  display: flex;
  flex-direction: row;
  justify-content: space-between;
}

.home__header__section {
  font-size: 2rem;
  font-weight: 600;
  text-transform: uppercase;
}

.home__header__scroll {
  display: flex;
  gap: 1rem;
  align-items: center;
}

.home__header__text {
  font-size: 2rem;
  font-weight: 400;
}

.home__header__arrow {
  width: 2rem;
  height: 2rem;
}

.home__about {
  position: relative;
  width: 100%;
  height: 100dvh;
  overflow: hidden;
}

.home__about__wrapper {
  width: 100%;
  height: 100%;
  padding: 0 10rem;
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  gap: 2rem;
}
@media (max-width: 767px) {
  .home__about__wrapper {
    padding: 0rem 4rem;
  }
}

.home__about__title {
  font-size: 6.4rem;
  color: #f6f6f6;
  line-height: 10rem;
  margin-top: 15rem;
}
.home__about__title .home__about__title__span {
  font-family: "Manolo Mono";
  font-size: 12.8rem;
}

.home__about__para {
  color: #f6f6f6;
  font-size: 3rem;
  font-weight: 500;
  letter-spacing: 0.2rem;
  word-spacing: 0.2rem;
  width: 60%;
  line-height: 4rem;
  overflow: hidden;
}
@media (max-width: 767px) {
  .home__about__para {
    width: 100%;
  }
}

.home__about__infinity {
  position: absolute;
  color: #f6f6f6;
  font-size: 12.8rem;
  font-family: "Manolo Mono";
  bottom: 2%;
  width: 650%;
}
@media (max-width: 767px) {
  .home__about__infinity {
    width: 2000%;
  }
}

.home__about__circle {
  position: absolute;
  bottom: 0;
  right: 0;
}

.home__circles {
  width: 25rem;
  height: 25rem;
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: -1;
}

.home__circles__circle {
  position: absolute;
  border-radius: 100%;
  border: 0.4rem solid #f6f6f6;
}
.home__circles__circle:nth-child(3) {
  width: 45rem;
  height: 45rem;
}
.home__circles__circle:nth-child(2) {
  width: 65rem;
  height: 65rem;
}
.home__circles__circle:nth-child(1) {
  width: 85rem;
  height: 85rem;
}

.home__featured {
  width: 100vw;
  height: 100dvh;
  position: relative;
  padding: 0rem 10rem;
  display: flex;
  flex-direction: column;
}
@media (max-width: 767px) {
  .home__featured {
    padding: 0 4rem;
  }
}

.home__featured__projects {
  margin-top: 10rem;
  display: grid;
  grid-template-columns: 3fr 1fr;
}

.home__featured__projects__content {
  display: flex;
  flex-direction: column;
  gap: 2rem;
}

.home__featured__projects__title {
  font-size: 4rem;
  font-weight: 600;
}

.home__featured__projects__para {
  font-size: 3rem;
  font-weight: 400;
  line-height: 4rem;
}

.home__featured__projects__button {
  display: flex;
  justify-content: center;
  align-items: center;
}

.home__featured__works {
  margin-top: 5rem;
}

.home__project {
  width: 100%;
  height: 15rem;
  position: relative;
  display: flex;
  align-items: center;
}

.home__project::before {
  content: "";
  display: block;
  position: absolute;
  bottom: 0;
  left: 0;
  height: 0.2rem;
  width: 100%;
  background-color: #f6f6f6;
  transition: 0.5s ease-in;
}

.home__project__title {
  display: block;
  line-height: 1;
  font-family: "Manolo Mono";
  font-size: 8rem;
  text-transform: uppercase;
  position: relative;
}
@media (max-width: 767px) {
  .home__project__title {
    font-size: 6rem;
  }
}

.home__project > .home__project__link:nth-child(1) .home__project__title {
  will-change: transform;
  transform-style: preserve-3d;
  transition: 0.25s;
  transition-delay: calc(0.05s * var(--index));
  transform-origin: bottom;
  display: inline-block;
}

.home__project > .home__project__link:nth-child(2) .home__project__title {
  will-change: transform;
  transform-style: preserve-3d;
  transition: 0.25s;
  transition-delay: calc(0.05s * var(--index));
  transform-origin: top;
  display: inline-block;
  transform: translate3d(0, 100%, 0) rotateX(-90deg);
}

.home__project:hover::before {
  width: 0;
}
.home__project:hover > .home__project__link:nth-child(1) .home__project__title {
  transform: translate3d(0, -100%, 0) rotateX(-90deg);
}
.home__project:hover > .home__project__link:nth-child(2) .home__project__title {
  transform: translate3d(0, 0%, 0) rotateX(0deg);
}

.sticky__parent {
  width: 300vw;
  height: 200vw;
  display: flex;
  flex-direction: row;
}

.home__fake {
  width: 100vw;
  height: 100dvh;
  pointer-events: none;
}

.home__abstract {
  width: 100vw;
  height: 100dvh;
  display: grid;
  grid-template-columns: 8rem 1fr 8rem;
  position: relative;
}
.home__abstract .home__abstract__side {
  position: relative;
  background-color: #212121;
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
}
.home__abstract .home__abstract__main {
  position: relative;
  overflow: hidden;
}
.home__abstract .home__abstract__main .home__abstract__image {
  position: absolute;
  width: 30rem;
  height: 40rem;
  object-fit: cover;
  left: 0;
  top: 0;
  transition-timing-function: linear;
  opacity: 0;
}
.home__abstract .home__abstract__l1 {
  width: 100%;
  height: 0.2rem;
  background-color: #f6f6f6;
  position: absolute;
  top: 50%;
  left: 0;
  transform: translate(0%, -50%);
  opacity: 0.5;
}
.home__abstract .home__abstract__l2 {
  height: 100%;
  width: 0.2rem;
  background-color: #f6f6f6;
  position: absolute;
  top: 0%;
  left: 50%;
  opacity: 0.5;
  transform: translate(-50%, 0%);
}
.home__abstract .home__abstract__circles {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 90%;
  height: 100%;
}
.home__abstract .home__abstract__circles .home__abstract__circle {
  border: 0.2rem dotted #f6f6f6;
  width: 35rem;
  height: 35rem;
  position: absolute;
  top: 50%;
  left: 50%;
  transform-origin: center;
  transform: translate(-50%, -50%);
  border-radius: 50%;
}

.home__skills {
  width: 100vw;
  height: 100dvh;
  display: grid;
  grid-template-columns: 1fr 1fr;
  background-color: #000000;
}
@media (max-width: 767px) {
  .home__skills {
    grid-template-columns: 1fr;
  }
}

.home__skills__container {
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  justify-content: space-between;
  background-color: #212121;
  position: relative;
  padding: 6rem 4rem;
}
@media (max-width: 767px) {
  .home__skills__container {
    padding: 4rem 2rem;
  }
}

.home__skills__sphere {
  align-self: center;
}

.home__skills__skill {
  font-weight: 400;
  font-size: 1.5rem;
  position: absolute;
}

.home__skills__title {
  font-size: 6rem;
  font-weight: 600;
  text-transform: uppercase;
  font-family: "Manolo Mono";
}

.home__skills__para {
  font-size: 1.5rem;
  line-height: 2rem;
  width: 60%;
}
@media (max-width: 767px) {
  .home__skills__para {
    width: 90%;
    font-size: 2rem;
  }
}

.home__skills__education {
  padding: 6rem 4rem;
  display: flex;
  flex-direction: column;
  gap: 4rem;
}

.home__education__card {
  display: flex;
  flex-direction: column;
  gap: 1rem;
  padding: 0rem 1rem 2rem 1rem;
  border-bottom: 0.1rem solid #f6f6f6;
}
.home__education__card .home__education__title {
  font-size: 3.5rem;
  font-weight: 500;
}
.home__education__card .home__education__para {
  font-size: 2rem;
  font-weight: 400;
}
.home__education__card .home__education__date {
  font-size: 1.5rem;
  font-weight: 400;
  opacity: 0.7;
}

.home__contact {
  width: 100vw;
  height: 100dvh;
  padding: 0rem 10rem;
}
@media (max-width: 767px) {
  .home__contact {
    padding: 0rem 2rem;
  }
}

.home__contact__wrapper {
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  justify-content: space-evenly;
}

.home__contact__title {
  font-size: 12rem;
  font-family: "Manolo Mono";
  width: 60%;
}
@media (max-width: 767px) {
  .home__contact__title {
    font-size: 10rem;
    width: 100%;
  }
}

.home__contact__button {
  text-decoration: none;
  width: 50rem;
  height: 8rem;
  background: transparent;
  border: 0.4rem solid #f6f6f6;
  border-radius: 2rem;
  position: relative;
  overflow: hidden;
  font-size: 2rem;
  transition: 0.6s ease-in-out;
}
@media (max-width: 767px) {
  .home__contact__button {
    width: 100%;
    height: 10rem;
  }
}
.home__contact__button::before {
  content: "";
  display: flex;
  border-radius: 50%;
  background: #ffd000;
  width: 5rem;
  height: 5rem;
  position: absolute;
  left: 3rem;
  top: 1.5rem;
  transition: 0.5s ease-in-out;
  z-index: -1;
}
.home__contact__button:hover::before {
  width: 100rem;
  height: 100rem;
  left: -100px;
  top: -100px;
  border-radius: 0;
  z-index: -1;
}
.home__contact__button:hover {
  color: #212121;
}

.home__csontact__para {
  font-size: 3rem;
  font-weight: 600;
  text-transform: uppercase;
  line-height: 3rem;
}

.project__wrapper {
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  will-change: transform;
}

.case {
  width: 100%;
  height: 100%;
  opacity: 0;
  transition: opacity 0.4s ease, visibility 0.4s ease;
  visibility: hidden;
  display: none;
}
.case.active {
  display: block;
  opacity: 1;
  visibility: visible;
}

.case__header {
  width: 100%;
  height: 100dvh;
  position: relative;
}

.case__title {
  font-size: 15rem;
  font-family: "Manolo Mono";
  color: #f6f6f6;
  position: absolute;
  top: 20%;
  left: 50%;
  transform: translate(-50%, -50%);
  z-index: 1;
  width: 100%;
  text-align: center;
}
.case__title .case__title__text {
  display: inline-block;
}
@media (max-width: 767px) {
  .case__title .case__title__text {
    font-size: 10rem;
  }
}
@media (max-width: 767px) {
  .case__title {
    top: 15%;
  }
}

.case__media {
  position: absolute;
  width: 100%;
  height: 80%;
  bottom: 0;
  left: 0;
}
.case__media .case__media__image {
  width: 100%;
  object-fit: cover;
  height: 100%;
}

.case__information {
  display: grid;
  grid-template-columns: 1fr 1fr 1fr;
  gap: 5rem;
  padding: 10rem 20rem;
}
@media (max-width: 768px) {
  .case__information {
    padding: 5rem 2rem;
  }
}
.case__information .case__information__detail {
  display: flex;
  flex-direction: column;
  gap: 2rem;
  font-size: 2.5rem;
  font-weight: 500;
}
.case__information .case__information__detail .case__information__detail__title {
  font-size: 1.5rem;
  opacity: 0.8;
  font-weight: 400;
  text-transform: uppercase;
}
.case__information .case__info__para {
  grid-column-start: 1;
  grid-column-end: 4;
}

.case__gallery .case__gallery__media {
  max-width: 190rem;
  font-size: 0;
  margin: auto;
  max-width: 192rem;
  position: relative;
  width: 90%;
  margin-top: 2rem;
}
@media (max-width: 767px) {
  .case__gallery .case__gallery__media {
    width: 100%;
  }
}
.case__gallery .case__gallery__media .case__gallery__media__placeholder {
  display: inline-block;
  position: relative;
  width: 100%;
  z-index: 2;
}
.case__gallery .case__gallery__media .case__gallery__media__placeholder .case__gallery__media__image {
  height: 100%;
  left: 0;
  opacity: 1;
  pointer-events: none;
  position: absolute;
  top: 0;
  transition: opacity 1s ease;
  width: 100%;
}
.case__gallery__media__placeholder--active .case__gallery .case__gallery__media .case__gallery__media__placeholder .case__gallery__media__image {
  opacity: 1;
}

.projects__wrapper {
  padding: 10rem;
}
@media (max-width: 767px) {
  .projects__wrapper {
    padding: 10rem 2rem;
  }
}

.projects__title {
  font-size: 6.4rem;
  font-family: "Montserrat";
  font-weight: bold;
  text-transform: uppercase;
  margin-bottom: 5rem;
}

.project__works {
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/